<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Search;
use AppBundle\Entity\Travel;
use Doctrine\ORM\EntityRepository;
use Pagerfanta\Adapter\DoctrineORMAdapter;
use Symfony\Component\HttpFoundation\Request;

/**
 * TravelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TravelRepository extends EntityRepository
{
    /**
     * @param $sort
     * @param $order
     * @return DoctrineORMAdapter
     */
    public function paginator($sort, $order)
    {
        $queryBuilder = $this->createQueryBuilder('q')->where("q.status != :status")->setParameter("status", "closed");
        if ($sort == "category") {
            $queryBuilder->leftJoin("q.interests", "interests")->orderBy("interests.name", $order);
        } else {
            $queryBuilder->orderBy("q.$sort", $order);
        }

        return $adapter = new DoctrineORMAdapter($queryBuilder->getQuery());
    }

    /**
     * @param Search $search
     * @return DoctrineORMAdapter
     */
    public function searchPaginator(Search $search)
    {
        $queryBuilder = $this->createQueryBuilder('q')->where("q.status != :status")->setParameter("status", "closed");
        if (null !== $search->getDate()) {
            $queryBuilder->andWhere("q.date BETWEEN :now AND :next")
                ->setParameter('now', new \DateTime())
                ->setParameter('next', $search->getDate());
        }
        if (null !== $search->getLocation()) {
                $queryBuilder
                    ->leftJoin("q.address", "address")
                    ->andWhere("address.city = :city")
                    ->setParameter("city", $search->getLocation());
        }
        if (null !== $search->getPrice()) {
            $queryBuilder
                ->andWhere("q.price = :price")
                ->setParameter("price", $search->getPrice());
        }
        if (null !== $search->getChoice()) {
            $queryBuilder
                ->andWhere("q.title LIKE :search")
                ->setParameter("search", "%".$search->getChoice()."%");
        }

        $queryBuilder->orderBy("q.".$search->getSort(), $search->getOrder());

        return $adapter = new DoctrineORMAdapter($queryBuilder->getQuery());
    }

    /**
     * @param $number
     * @return array|Travel[]
     */
    public function findRand($number)
    {
        $travels = $this->findAll();
        $number = $number <= count($travels) ? $number : count($travels);
        $keys = array_rand($travels, $number <= count($travels) ? $number : count($travels));
        $out = [];
        foreach ($keys as $key) {
            $out[] = $travels[$key];
        }

        return $out;
    }

    /**
     * @param bool $all
     * @return array|Travel[]
     */
    public function findAll($all = false)
    {
        if ($all) {
            return parent::findAll();
        } else {
            return $this->createQueryBuilder("q")->where("q.status != :status")->setParameter("status", "closed")
                ->getQuery()->getResult();
        }
    }

}
